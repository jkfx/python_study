简单说明：　　

　　Canvas：画布，提供绘图功能(直线、椭圆、多边形、矩形) 可以包含图形或位图，用来绘制图表和图，创建图形编辑器，实现定制窗口部件。

　　什么时候用：

　　在比如像用户交互界面等，需要提供设计的图标、图形、logo等信息是可以用到画布。


语法格式如下：

w = Canvas ( master, option=value, ... )
master: 按钮的父容器。
options: 可选项，即该按钮的可设置的属性。这些选项可以用键 = 值的形式设置，并以逗号分隔。


序号	可选项 & 描述

--bd  边框宽度，单位像素，默认为 2 像素。
--bg  背景色
--confine 如果为 true (默认), 画布不能滚动到可滑动的区域外。
--cursor  光标的形状设定，如arrow, circle, cross, plus 等
--height  高度
--highlightcolor  要高亮的颜色
--relief  边框样式,可选值为 FLAT、SUNKEN、RAISED、GROOVE、RIDGE。 默认为 FLAT。
--scrollregion    一个元组 tuple (w, n, e, s) ，定义了画布可滚动的最大区域，w 为左边，n 为头部，e 为右边，s 为底部。
--width   画布在 X 坐标轴上的大小。
--xscrollincrement    用于滚动请求水平滚动的数量值。
--xscrollcommand  水平滚动条，如果画布是可滚动的，则该属性是水平滚动条的 .set（）方法。
--yscrollincrement    类似 xscrollincrement, 但是垂直方向。
--yscrollcommand  垂直滚动条，如果画布是可滚动的，则该属性是垂直滚动条的 .set（）方法。


Canvas 组件支持以下标准选项：

==arc − 创建一个扇形
--coord = 10, 50, 240, 210
--arc = canvas.create_arc(coord, start=0, extent=150, fill="blue")

==image − 创建图像
--filename = PhotoImage(file = "sunshine.gif")
--image = canvas.create_image(50, 50, anchor=NE, image=filename)

==line − 创建线条
--line = canvas.create_line(x0, y0, x1, y1, ..., xn, yn, options)

==oval − 创建一个圆
--oval = canvas.create_oval(x0, y0, x1, y1, options)

==polygon − 创建一个至少有三个顶点的多边形
--oval = canvas.create_polygon(x0, y0, x1, y1,...xn, yn, options)


background(bg)背景色
foreground(fg)前景色
borderwidth组件边框宽度
width组件宽度
height高度
bitmap位图
image图片
绘图的方法主要以下几种：
-create_arc  圆弧
-create_bitmap   绘制位图，支持XBM
-create_image    绘制图片，支持GIF(x,y,image,anchor)
-create_line 绘制支线
-create_oval 绘制椭圆
-create_polygon  绘制多边形(坐标依次罗列，不用加括号，还有参数，fill,outline)
-create_rectangle    绘制矩形((a,b,c,d),值为左上角和右下角的坐标)
-create_text 绘制文字(字体参数font,)
-create_window   绘制窗口
-delete  删除绘制的图形
-itemconfig  修改图形属性，第一个参数为图形的ID，后边为想修改的参数
-move    移动图像（1，4，0），1为图像对象，4为横移4像素，0为纵移像素，然后root.update()刷新即可看到图像的移动，为了使多次移动变得可视，最好加上time.sleep()函数只要用create_方法画了一个图形，就会自动返回一个ID,创建一个图形时将它赋值给一个变量，需要ID时就可以使用这个变量名
coords(ID)返回对象的位置的两个坐标（4个数字元组）

对于按钮组件、菜单组件等可以在创建组件时通过command参数指定其事件处理函数。方法为bind;或者用bind_class方法进行类绑定，bind_all方法将所有组件事件绑定到事件响应函数上。
